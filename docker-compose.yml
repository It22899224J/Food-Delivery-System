version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - restaurant
      - delivery-service
      - order-service
      - payment-service
      - auth-service
    networks:
      - app-network

  restaurant:
    build:
      context: .
      dockerfile: apps/restaurant/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - restaurant-db
    environment:
      DATABASE_URL: postgres://postgres:password@restaurant-db:5432/restaurant
    networks:
      - app-network

  restaurant-db:
    image: postgres:15
    container_name: restaurant-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: restaurant
    ports:
      - "5433:5432"
    volumes:
      - restaurant_db_data:/var/lib/postgresql/data
    networks:
      - app-network

  # New Delivery Service
  delivery-service:
    build:
      context: .
      dockerfile: apps/delivery/Dockerfile
    ports:
      - "3002:3002"
    depends_on:
      - delivery-db
    environment:
      DATABASE_URL: postgres://postgres:password@delivery-db:5432/delivery
      ORDER_SERVICE_URL: http://order-service:3004
      RESTAURANT_SERVICE_URL: http://restaurant:3000
    networks:
      - app-network

  delivery-db:
    image: postgres:15
    container_name: delivery-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: delivery
    ports:
      - "5434:5432" 
    volumes:
      - delivery_db_data:/var/lib/postgresql/data
    networks:
      - app-network


  # New Order Service
  order-service:
    build:
      context: .
      dockerfile: apps/order/Dockerfile
    ports:
      - "3004:3004"
    depends_on:
      - order-db
    environment:
      DATABASE_URL: postgres://postgres:password@order-db:5432/order
      DELIVERY_SERVICE_HOST: delivery-service
      DELIVERY_SERVICE_PORT: 3002
    networks:
      - app-network

  order-db:
    image: postgres:15
    container_name: order-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: order
    ports:
      - "5435:5432" 
    volumes:
      - order_db_data:/var/lib/postgresql/data
    networks:
      - app-network

# New Auth Service
  auth-service:
    build:
      context: .
      dockerfile: apps/auth/Dockerfile
    ports:
      - '3012:3012'
    depends_on:
      - auth-db
    environment:
      DATABASE_URL: postgresql://postgres:password@auth-db:5432/auth
    networks:
      - app-network

  auth-db:
    image: postgres:15
    container_name: auth-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: auth
    ports:
      - '5436:5432'
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Payment Service
  payment-service:
    build:
      context: .
      dockerfile: apps/payment/Dockerfile
    ports:
      - "3006:3006"
    environment:
      PORT: 3006
      STRIPE_SECRET_KEY: "sk_test_51RIb3MBVWky9Ykn8nJ05XPR7CtXLmQPYCNsLatmYaxjrXrYSMQ2XD6HuWVt6AL653JJRGiaaadbJaeJ3QaYpPEJD00RqhT1Fqo"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  restaurant_data:
  delivery_data:
  order_data:
  restaurant_db_data:
  delivery_db_data:
  order_db_data:
  auth_db_data:
