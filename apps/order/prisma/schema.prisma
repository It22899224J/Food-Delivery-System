generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:password@order-db:5432/order"
}

model Order {
  id                 String             @id @default(uuid())
  userId             String             // Customer ID
  restaurantId       String             // Restaurant ID
  deliveryPersonnelId String?           // Assigned driver ID (optional as it might be assigned later)
  status             OrderStatus        @default(PENDING)
  totalAmount        Float
  deliveryAddress    String
  deliveryInstructions String?          // Optional
  paymentStatus      PaymentStatus      @default(PENDING)
  paymentMethod      String
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt

  // Relations
  items              OrderItem[]
  statusHistory      OrderStatusHistory[]

  @@map("orders")
}

model OrderItem {
  id                 String   @id @default(uuid())
  orderId            String
  itemId             String  
  quantity           Int
  price              Float    
  specialInstructions String?  

  // Relation
  order              Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("order_items")
}

model OrderStatusHistory {
  id                 String      @id @default(uuid())
  orderId            String
  previousStatus     OrderStatus?
  newStatus          OrderStatus
  changedBy          String      
  timestamp          DateTime    @default(now())

  // Relation
  order              Order       @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("order_status_history")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PREPARING
  READY_FOR_PICKUP
  ON_THE_WAY
  DELIVERED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PAID
  REFUNDED
}